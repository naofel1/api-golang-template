# Angus: Remember that in prod, we typically want to inject sensitive environment variables like connection strings,
# etc. via the environment. You can choose to do that by injecting a whole yaml file (but this shouldn't be stored in
# your repo, since it contains sensitive information), by using some kind of yaml templating system, where a yaml file
# is constructed from a template and environment variables, or by reading config directly from the environment instead
# of from a yaml file.
#
# I like the last option, personally, because you can store your secrets in GitHub Environments, which is free and makes
# injecting secrets for CI super easy.
# There are many secrets management options out there though, and many will work well with yaml files.
#
# Naofel: Ok now I uderstand more in depth what you mean by injecting the general config in the environment. Because yes,
# as there are sensitive information in the config file, we can't store it in the repo. I really like the last option too,
# I will implement it in the template. However, I'm intrigued to hear more of your thoughts on this matter.
# In a more general case like in a company, what do you think about this? Does the yaml file is a good option to store
# application configuration with non sensitive information, like application address, port etc...?
---
app_info:
  mode: development
host:
  address: '127.0.0.1:8081'
  port: 8081
  base_url: "/api"
server:
  client_timeout: '5s'
  read_timeout: '5s'
  write_timeout: '5s'
  shutdown_grace_period: "30s"
#### DATABASE ####
mariadb:
  user: api
  host: 127.0.0.1
  net: tcp
  port: 6604
  db_name: api_prod
  parseTime: true
  params:
    charset: utf8mb4
    loc: UTC
redis:
  connection_string: 127.0.0.1:6379
  selected_db: 0
#### Token management ####
jwt:
  token_duration: '60m'
  refresh_duration: '80m'
certs:
  pub_student: configs/certs/student_public.pem
  priv_student: configs/certs/student.pem
  pub_admin: configs/certs/admin_public.pem
  priv_admin: configs/certs/admin.pem
#### Client ####
discord:
  enabled: true
  channels:
    session: "my_discord_id_channel"
centrifugo:
  connection_string: http://dev.internal.centrifugo.domain.TLD/api
jaeger:
  connection_string: http://127.0.0.1:14268/api/traces
aws:
  region: fr-par
  endpoint: https://s3.fr-par.scw.cloud
  bucket_name: api
mailgun:
  client_domain: domain.TLD
  mailer:
    reset_password:
      sender: contact@domain.TLD
      subject: Reset your Password
#### Server configuration ####
cors:
  allowed_origins:
  - "*"
  allowed_headers:
  - Origin
  - Content-Type
  - X-Auth-Token
  - Authorization
  allowed_methods:
  - GET
  - POST
  - DELETE
